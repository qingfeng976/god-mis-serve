generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  phone          String   @unique
  password       String
  industry       String?
  hasInitialized Boolean  @default(false)
  createdAt      DateTime @default(now())
  products       Product[]
  inventory      InventoryRecord[]
  feedbacks      FeedbackRecord[]
  chats          ChatRecord[]
}

model Product {
  id         String   @id @default(uuid())
  name       String
  sku        String   @unique
  price      Float
  stock      Int
  userId     String
  categoryId String?
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}

model InventoryRecord {
  id        String   @id @default(uuid())
  productId String
  userId    String
  type      InventoryType
  quantity  Int
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum InventoryType {
  IN
  OUT
}

model FeedbackRecord {
  id        String   @id @default(uuid())
  userId    String
  type      FeedbackType
  content   String
  answer    String?
  status    FeedbackStatus @default(PENDING)
  createdAt DateTime       @default(now())
  user      User           @relation(fields: [userId], references: [id])
}

enum FeedbackType {
  BUG
  FEATURE
  QUESTION
  OTHER
}

enum FeedbackStatus {
  PENDING
  AUTO_REPLIED
  RESOLVED
  CLOSED
}

model ChatRecord {
  id        String   @id @default(uuid())
  userId    String
  question  String
  answer    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
